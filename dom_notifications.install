<?php

/**
 * @file
 * Custom tables, updates and install/uninstall functionality.
 */

use Drupal\Core\Database\Database;
use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_schema().
 */
function dom_notifications_schema() {
  return [
    'dom_notifications_user_channels' => [
      'description' => 'Tracks users and notification channels they subscribed to.',
      'fields' => [
        'channel_plugin_id' => [
          'description' => 'Plugin ID as it is written in channel plugin annotation.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
        ],
        'uid' => [
          'description' => 'User ID of a user subscribed to the channel.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ],
        'channel_id' => [
          'description' => 'Channel ID without placeholders.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
        ],
        'notify' => [
          'description' => 'Boolean indicating whether or not user should be notified about the notification for the channel.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 1,
          'size' => 'tiny',
        ],
      ],
      'primary key' => ['uid', 'channel_id'],
      'foreign keys' => [
        'user' => [
          'table' => 'users',
          'columns' => [
            'uid' => 'uid',
          ],
        ],
        'notification' => [
          'table' => 'dom_notification',
          'columns' => [
            'channel_id' => 'channel_id',
          ],
        ],
      ],
    ],
    'dom_notifications_read' => [
      'description' => 'Tracks users and notification that they already read.',
      'fields' => [
        'uid' => [
          'description' => 'User ID.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ],
        'nid' => [
          'description' => 'Dom Notification ID.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ],
      ],
      'primary key' => ['uid', 'nid'],
      'foreign keys' => [
        'user' => [
          'table' => 'users',
          'columns' => [
            'uid' => 'uid',
          ],
        ],
        'notification' => [
          'table' => 'dom_notification',
          'columns' => [
            'nid' => 'id',
          ],
        ],
      ],
    ],
    'dom_notifications_seen' => [
      'description' => 'Tracks users and notification that they already seen.',
      'fields' => [
        'uid' => [
          'description' => 'User ID.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ],
        'nid' => [
          'description' => 'Dom Notification ID.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ],
      ],
      'primary key' => ['uid', 'nid'],
      'foreign keys' => [
        'user' => [
          'table' => 'users',
          'columns' => [
            'uid' => 'uid',
          ],
        ],
        'notification' => [
          'table' => 'dom_notification',
          'columns' => [
            'nid' => 'id',
          ],
        ],
      ],
    ],
  ];
}

/**
 * Install dom_notifications_seen table.
 */
function dom_notifications_update_8001() {
  $table = 'dom_notifications_seen';
  $schema = Database::getConnection()->schema();

  if (!$schema->tableExists($table)) {
    $spec = [
      'description' => 'Tracks users and notification that they already seen.',
      'fields' => [
        'uid' => [
          'description' => 'User ID.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ],
        'nid' => [
          'description' => 'Dom Notification ID.',
          'type' => 'int',
          'unsigned' => TRUE,
          'not null' => TRUE,
          'default' => 0,
        ],
      ],
      'primary key' => ['uid', 'nid'],
      'foreign keys' => [
        'user' => [
          'table' => 'users',
          'columns' => [
            'uid' => 'uid',
          ],
        ],
        'notification' => [
          'table' => 'dom_notification',
          'columns' => [
            'nid' => 'id',
          ],
        ],
      ],
    ];

    $schema->createTable($table, $spec);
  }
}

/**
 * Add bool field for notification.
 */
function dom_notifications_update_8002(&$sandbox) {
  $definition_manager = \Drupal::entityDefinitionUpdateManager();

  // Install a flag field for notifications.
  $flag = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Global'))
    ->setDescription(t('Indicates if the notification is a global or local.'))
    ->setInitialValue(0)
    ->setDefaultValue(0);
  $definition_manager->installFieldStorageDefinition('flag', 'dom_notification', 'dom_notifications', $flag);
}
