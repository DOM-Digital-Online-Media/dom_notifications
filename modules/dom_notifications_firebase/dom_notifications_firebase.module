<?php

/**
 * @file
 * Contains dom_notifications_firebase.module.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function dom_notifications_firebase_dom_notification_presave(EntityInterface $entity) {
  /** @var \Drupal\dom_notifications\Entity\DomNotificationInterface $entity */
  $just_published = !empty($entity->original)
    ? !$entity->original->isPublished() && $entity->isPublished()
    : $entity->isPublished();

  /** @var \Drupal\dom_notifications\DomNotificationsServiceInterface $notifications_service */
  $notifications_service = \Drupal::service('dom_notifications.service');

  // Get channels which should initiate firebase notification.
  $config = $notifications_service->getNotificationsSettings();
  $channels = array_filter($config['channels'] ?? []);

  if (!$just_published || !in_array($entity->getChannel()->id(), $channels)) {
    return;
  }

  $queue = \Drupal::queue('dom_notifications_firebase_queue_worker');
  $chunks = array_chunk($entity->getRecipients(), $config['user_count'] ?? 100);

  $data = ['entity' => $entity];
  foreach ($chunks as $chunk) {
    $data['recipients'] = $chunk;
    $queue->createItem($data);
  }
}
